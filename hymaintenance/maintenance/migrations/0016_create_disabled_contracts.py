# Generated by Django 2.0.3 on 2018-04-04 12:45

from django.db import migrations


def do_nothing(apps, schema_editor):
    pass


def create_disabled_contracts(apps, schema_editor):
    MaintenanceContract = apps.get_model("maintenance", "MaintenanceContract")
    MaintenanceType = apps.get_model("maintenance", "MaintenanceType")
    Company = apps.get_model("customers", "Company")
    maintenance_types = list(MaintenanceType.objects.all())
    companies = Company.objects.all()
    for company in companies:
        contracts_by_type = {contract.maintenance_type: contract for contract in company.contracts.all()}
        if len(contracts_by_type) == len(maintenance_types):
            continue
        else:
            for maintenance_type in maintenance_types:
                if maintenance_type not in contracts_by_type:
                    MaintenanceContract.objects.create(company=company, maintenance_type=maintenance_type, disable=True)


class Migration(migrations.Migration):

    dependencies = [("customers", "0005_auto_20180330_1521"), ("maintenance", "0015_maintenancecontract_disable")]

    operations = [migrations.RunPython(create_disabled_contracts, do_nothing)]
